/*------------------------------------*\
  # ORGANISMS
\*------------------------------------*/

/**
 * CONTENTS
 *
 * HEADER
 *
 * SITE BRANDING TEXT
 *
 * IMAGE
 *
 * NAVIGATION TOP
 *
 * FOOTER
 *
 * PAGE
 */

 /*------------------------------------*\
  # HEADER
\*------------------------------------*/

.site-header {
    width: 100%;
    max-width: $page-width;
    margin: 0 auto $global-margin*2 auto;
    display: grid;
    grid-template-columns: 2em 1fr 2em;
    grid-gap: $global-grid-gap;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-template-rows: 2em 1fr 2em; // keep it tight up top with the header-logo
        grid-template-columns: 2em 1fr 1fr 1fr 2em;
    }
}

.single .site-header {
    @media (min-width: map-get($breakpoints, medium)) {
        grid-template-rows: initial;
        grid-template-columns: 2em 1fr 2em;
    }
}

.breadcrumbs {
    grid-column: 1;
    grid-row: 2/4;
    justify-self: center; // match header-logo and spine-border
}

.single .breadcrumbs {
    grid-row: 1/3;
    align-self: end;
    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 2;
    }
}

.header-logo {
    grid-row: 1;
    grid-column: 3;
    justify-self: center; // macth the spine

    @media (min-width: map-get($breakpoints, medium)) {
        align-self: end;
        grid-column: 5;
    }
    
    a {
        display: inline-block; // fill the block test with a background color
    
        svg {
            width: 1rem; // 16px
        }
    }
}

.single .header-logo {
    @media (min-width: map-get($breakpoints, medium)) {
        align-self: center; // text on the row now
    }
}

/*------------------------------------*\
  # SITE BRANDING TEXT
\*------------------------------------*/

.single-header-top-line {
    grid-row: 1;
    grid-column: 2;

    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    justify-content: space-between;

    @media (min-width: map-get($breakpoints, medium)) {
        flex-direction: row;

        h1 {
            margin-bottom: 0; // help these align
        }
    }
}

.site-branding-text {
    grid-row: 2;
    grid-column: 2;
    z-index: 20; // above the image

    @media (min-width: map-get($breakpoints, medium)) {
        writing-mode: vertical-rl;
        grid-row: 1/4;
        grid-column: 3;
        place-self: center;
    }
}

.single .site-branding-text {
    background: initial;
    mix-blend-mode: initial;
    align-self: flex-start;
    @media (min-width: map-get($breakpoints, medium)) {
        writing-mode: initial;
    }
}

.site-header .site-branding-text {
    mix-blend-mode: screen; // needs to be only on the site header so it is always above an image
}

.single .site-header .site-branding-text { // this is a ridiculous selector but its needed as a reset
    mix-blend-mode: initial;
}

/*------------------------------------*\
  # IMAGE
\*------------------------------------*/

.header-color-blocking {
    z-index: 15; // above the image
    grid-column: 2;
    grid-row: 2;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1 / 4;
        grid-column: 3;
    }
}

.custom-header-media {
    z-index: 10;
    grid-row: 1 / 3;
    grid-column: 2;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 2;
        grid-column: 2 / 4;
    }
    
    img, picture {
        width: 100%; // small images still fill the box
    }
}

.overlaying-image {
    filter: grayscale(100%); // a number is needed to filter
    mix-blend-mode: multiply;
    z-index: 14; // below the cololr-block above the image
}

.single .overlaying-image {
    filter: none; // overwrite the home / category / page anything not custom
}

.single .custom-header-media {
// .single .custom-header-photo, // I need to define why these are all different
// .single .custom-header-featured-video {
    grid-row: 2;
    align-self: end;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 2;
    }
}

/*------------------------------------*\
  # NAVIGATON TOP
\*------------------------------------*/

.navigation-top {
    grid-column: 2;
    grid-row: 3;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 4;
        grid-row: 2 / 4;
    }
}

.single .navigation-top {
    @media (min-width: map-get($breakpoints, medium)) {

        ul {
            display: flex;
            margin-top: 0; // browser reset
        }

        li {
            margin-bottom: 0;
            margin-right: $global-margin;
        }
        
        li:last-child() {
            margin-right: 0;
        }
    }
}

/*------------------------------------*/

.spine {
    grid-column: 3;
    grid-row: 2/4;
    writing-mode: vertical-rl;
    justify-self: center; // match header-logo
    // place-self: end; might need only bigger

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 2;
        grid-column: 5;
        align-self: end;
        // margin-bottom: $global-margin*2; // match the base of the image

    }
}

.single .spine {
    grid-row: 1/3;
    align-self: end;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 3;
        // align-self: start;
    }
}

/*------------------------------------*\
  # FOOTER
\*------------------------------------*/

.site-footer { // I think this can be just the footer selector
    width: calc(100% - 6rem);
    max-width: 71rem;
    margin: 0 auto;

    @media (min-width: map-get($breakpoints, medium)) {
        padding-top: $global-padding*5; // guess and check
    }
}

.footer_menu {
    display: grid;
    grid-template-columns: 1fr; // start simple stack then go to direction. maybe this should be a flex
    grid-gap: $global-grid-gap;
    margin-bottom: $global-margin*2;
    padding-left: 0; // browser reset

    @media (min-width: map-get($breakpoints, medium)) {
        grid-template-columns: repeat(3, 1fr);
    }
}

.footer_info {
    display: grid;
    grid-template-columns: 1fr; // start simple stack then go to direction. maybe this should be a flex
    grid-gap: $global-grid-gap;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-template-columns: repeat(3, 1fr);
    }
}

/* .footer_copyright {
    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 1; // this is the default
    }
}
 */

 #bottom-menu {
    padding-left: 0; // browser rest
    margin: 0;
}

.footer_contact {
    @media (min-width: map-get($breakpoints, medium)) {
        // grid-column: 3; // this is the default
        text-align: right; 
    }
}

/*------------------------------------*\
  # PAGE
\*------------------------------------*/

.background-primary {
    background: $primary-color;
}

.background-dirty { // sort of used more like an atom
    background: $light-gray;
}

.front-page-titles {
    width: calc(100% - 6rem);
    max-width: 71rem;
    margin: 0 auto;
    display: grid;
    grid-gap: $global-grid-gap/2; // double the grid half the gap
    grid-template-columns: repeat(6, 1fr);
    background: $white;
    padding-left: 1rem;
    padding-right: 1rem;
    
    @media (min-width: map-get($breakpoints, medium)) {
        grid-gap: $global-grid-gap;
    }
}

.fp-header {
    grid-column: 2;
    // align-self: end;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 2 / 6;
    }
}

.site-main article, // this isnt working for some reason?
.site-main_article { /* running wordpress post class prevents using a straight classes */
    width: calc(100% - 2rem); // slightly different so the sid bar fits
    max-width: 71rem;
    margin: 0 auto;
    display: grid;
    grid-gap: $global-grid-gap;
    padding-top: $global-padding*2;
    grid-template-columns: 1rem 1fr 1rem;

    @media (min-width: map-get($breakpoints, medium)) {
        width: calc(100% - 6rem); // slightly different so the sid bar fits
        grid-template-columns: repeat(6, 1fr); // slightly more complex to fit with the rest of the page grid
    }
}

.spine-border {
    grid-row: 1/3;
    grid-column: 1;
    z-index: 15; // over the top of categories on single
    justify-self: end;
    
    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1/3;
        justify-self: start; // categories takes up that space as well
    }
}

.single .spine-border, // even tho these are the same the names help keep them seperate and documenting the details really helps
.category .spine-border {
    grid-row: 1/5; // image : header : date : content : explore
    grid-column: 1;
    justify-self: start; // I think this is a browser default

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1/4; // what are the 6: header : date : content
        justify-self: start; // categories takes up that space as well
    }
}

.single .spine-border {
    grid-row: 1/6; // header : date : speechbubble : content : category
    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1/5; // header : date / speechbubble : content : category
    }
}

.category .spine-border {
    grid-row: 1/6; // image : header : content : category : explore

    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1/5; // image : header : date : content : explore
    }
}

.article-content {
    grid-column: 2;
    margin-bottom: $global-margin;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 2 / 6;
        margin-bottom: $global-margin*3;
    }
}

.article-date {
    grid-row: 2;
    grid-column: 2;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 2 / 4; // make room for the sppechbubblle
    }
}

.article-speechbubble {
    grid-column: 2; //dealing with the last skinny column // this might be wrong

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 4/6;
        justify-self: end;
    }
}

.article-category {
    grid-column: 2;
    // grid-row: 4; I think we can keep this out and do the order with the DOM

    @media (min-width: map-get($breakpoints, medium)) {
        text-align: right;
        grid-row: 1 / 3;
        grid-column: 1;
        writing-mode: vertical-rl;
        align-self: end;
        overflow-x: scroll;
        max-height: 45em; // incase of a long category name it will truncate
    }
    
    ul {
        padding-left: 0; // browser reset
    }

    a {
        color: $dark-gray; // purposly not as strong as a regular link
    }
}

.single .article-category {
    @media (min-width: map-get($breakpoints, medium)) {
        grid-row: 1 / 4; // header : date : content
        align-self: start;
        grid-column: 1;
    }

    h3 {
        margin: 0;
        grid-column: 1;
    }
}

/*------------------------------------*\
  # ARTICLE BASE
\*------------------------------------*/

.article-base {
    width: 100%;
    max-width: $page-width;
    margin: $global-margin*3 auto 0 auto; // top right bottom left
    display: grid;
    grid-gap: $global-grid-gap;
    // grid-template-columns: 2em 1fr 2em; // possibly skip the right margin
    grid-template-columns: 2em 1fr; // possibly skip the right margin

    @media (min-width: map-get($breakpoints, medium)) {
        grid-template-columns: 2em 1fr 1fr 1fr 2em;
    }
}

.base-explore {
    grid-column: 1;
    writing-mode: vertical-rl;
    margin: 0; // vertical text doesnt need the margin
}

.article-tags {
    grid-column: 2;
    margin-right: 3rem;
    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 4;
        margin-right: 0;
    }
}

.article-comments {
    grid-column: 2;
    margin-right: 3rem;

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 3;
        margin-right: 0;
    }
}

.base-tags {
    grid-column: 1;
    grid-row: 3;
    writing-mode: vertical-rl;
    margin: 0; // vertical text doesnt need margins

    @media (min-width: map-get($breakpoints, medium)) {
        grid-column: 5;
        grid-row: 1;
        margin-right: 0;
    }
}
